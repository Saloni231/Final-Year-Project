plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'

}

android {
    compileSdk 30

    //packagingOptions {
        //exclude 'META-INF/INDEX.LIST'
        //exclude 'META-INF/DEPENDENCIES'
    //}

    defaultConfig {
        applicationId "com.example.chatbotui"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.firebase:firebase-firestore:23.0.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation platform('com.google.firebase:firebase-bom:28.4.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'br.com.simplepass:loading-button-android:1.14.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.android.volley:volley:1.1.1'

    //implementation 'com.google.cloud:google-cloud-dialogflow:4.1.6'
    //implementation 'io.grpc:grpc-okhttp:1.41.0'
}
//configurations.implementation.exclude(group: 'com.google.api.grpc', module: 'proto-google-common-protos')
//configurations.implementation.exclude(group: 'com.google.protobuf', module: 'protobuf-java')
//dependencies {
    //implementation (group: 'com.google.protobuf', name: 'protobuf-java', version: '3.0.0')
//}
//configurations.all {
    //resolutionStrategy {
        //force 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    //}
//}
//configurations.implementation.exclude(group: 'com.google.firebase', module: 'protolite-well-known-types')
//configurations.implementation.exclude(group: 'com.google.protobuf', module: 'protobuf-javalite')
//configurations.implementation.canBeResolved = true
//configurations.api.canBeResolved = true
//task findDuplicates {
    //doLast {
        //Map<String, List<File>> pathMap = [:]
        //configurations.implementation.each { file ->
            //FileTree tree = file.directory ? fileTree(file) : zipTree(file)
            //tree.visit { FileVisitDetails fvd ->
                //if (!fvd.directory) {
                    //String path = fvd.path
                    //List<File> fileList = pathMap[path]?:[]
                    //fileList << fvd.file
                    //pathMap[path] = fileList
                //}
            //}
        //}
        //pathMap.each { path, fileList ->
            //if (fileList.size() > 1) {
                //for(int i = 1; i < fileList.size(); i++)
                //{
                    //File dir = getFilesDir(fileList[i]);
                    //File file = new File(dir, path);
                    //fileList[i].delete();
                //}
                //println "Found duplicate $path in $fileList"
            //}
        //}
    //}
//}

